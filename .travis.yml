language: python

stages:
  - linting
  - test

cache:
  pip: true
  directories:
    - $HOME/.cache/pypoetry

jobs:
  fast_finish: true
  include:
    - python: 2.7
      env: PENDULUM_EXTENSIONS=1
    - python: 2.7
      env: PENDULUM_EXTENSIONS=0
    - python: 3.4
      env: PENDULUM_EXTENSIONS=1
    - python: 3.4
      env: PENDULUM_EXTENSIONS=0
    - python: 3.5
      env: PENDULUM_EXTENSIONS=1
    - python: 3.5
      env: PENDULUM_EXTENSIONS=0
    - python: 3.6
      env: PENDULUM_EXTENSIONS=1
    - python: 3.6
      env: PENDULUM_EXTENSIONS=0
    - python: 3.7-dev
      env: PENDULUM_EXTENSIONS=1
    - python: 3.7-dev
      env: PENDULUM_EXTENSIONS=0
    - python: pypy
    - python: pypy3

    - stage: linting
      python: "3.6"
      install:
        - pip install pre-commit
        - pre-commit install-hooks
      script:
        - pre-commit run --all-files
  allow_failures:
    - python: pypy
    - python: pypy3

before_install:
  - pip install codecov

install:
  - |
      if [ "$TRAVIS_PYTHON_VERSION" = "pypy" ]; then
        export PYENV_ROOT="$HOME/.pyenv"
        if [ -f "$PYENV_ROOT/bin/pyenv" ]; then
          pushd "$PYENV_ROOT" && git pull && popd
        else
          rm -rf "$PYENV_ROOT" && git clone --depth 1 https://github.com/yyuu/pyenv.git "$PYENV_ROOT"
        fi
        export PYPY_VERSION="5.6.0"
        "$PYENV_ROOT/bin/pyenv" install --skip-existing "pypy-$PYPY_VERSION"
        virtualenv --python="$PYENV_ROOT/versions/pypy-$PYPY_VERSION/bin/python" "$HOME/virtualenvs/pypy-$PYPY_VERSION"
        source "$HOME/virtualenvs/pypy-$PYPY_VERSION/bin/activate"
      fi
  - wget https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
  - python get-poetry.py --preview
  - poetry install -v
  - poetry build -v
  - |
      if [ "$PENDULUM_EXTENSIONS" == "1" ]; then
        find dist/ -iname pendulum*.whl -exec unzip -o {} 'pendulum/*' -d . \;
      fi

script: poetry run pytest --cov=pendulum --cov-config=.coveragerc tests/ -W ignore

after_success:
  - codecov
